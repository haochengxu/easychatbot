{"version":3,"file":"main.es.Ag0U65nt.js","sources":["../node_modules/react/cjs/react-jsx-runtime.development.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/jsx-runtime.js","../node_modules/@google/generative-ai/dist/index.mjs","../src/chatbot/utils.ts","../src/chatbot/Chatbot.tsx","../src/chatbot/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nvar React = require('react');\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n// even with the prod transform. This means that jsxDEV is purely\n// opt-in behavior for better messages but that we won't stop\n// giving you warnings if you use production apis.\n\nfunction jsxWithValidationStatic(type, props, key) {\n  {\n    return jsxWithValidation(type, props, key, true);\n  }\n}\nfunction jsxWithValidationDynamic(type, props, key) {\n  {\n    return jsxWithValidation(type, props, key, false);\n  }\n}\n\nvar jsx =  jsxWithValidationDynamic ; // we may want to special case jsxs internally to take advantage of static children.\n// for now we can ship identical prod functions\n\nvar jsxs =  jsxWithValidationStatic ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsx;\nexports.jsxs = jsxs;\n  })();\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Harm categories that would cause prompts or candidates to be blocked.\n * @public\n */\nvar HarmCategory;\n(function (HarmCategory) {\n    HarmCategory[\"HARM_CATEGORY_UNSPECIFIED\"] = \"HARM_CATEGORY_UNSPECIFIED\";\n    HarmCategory[\"HARM_CATEGORY_HATE_SPEECH\"] = \"HARM_CATEGORY_HATE_SPEECH\";\n    HarmCategory[\"HARM_CATEGORY_SEXUALLY_EXPLICIT\"] = \"HARM_CATEGORY_SEXUALLY_EXPLICIT\";\n    HarmCategory[\"HARM_CATEGORY_HARASSMENT\"] = \"HARM_CATEGORY_HARASSMENT\";\n    HarmCategory[\"HARM_CATEGORY_DANGEROUS_CONTENT\"] = \"HARM_CATEGORY_DANGEROUS_CONTENT\";\n})(HarmCategory || (HarmCategory = {}));\n/**\n * Threshhold above which a prompt or candidate will be blocked.\n * @public\n */\nvar HarmBlockThreshold;\n(function (HarmBlockThreshold) {\n    // Threshold is unspecified.\n    HarmBlockThreshold[\"HARM_BLOCK_THRESHOLD_UNSPECIFIED\"] = \"HARM_BLOCK_THRESHOLD_UNSPECIFIED\";\n    // Content with NEGLIGIBLE will be allowed.\n    HarmBlockThreshold[\"BLOCK_LOW_AND_ABOVE\"] = \"BLOCK_LOW_AND_ABOVE\";\n    // Content with NEGLIGIBLE and LOW will be allowed.\n    HarmBlockThreshold[\"BLOCK_MEDIUM_AND_ABOVE\"] = \"BLOCK_MEDIUM_AND_ABOVE\";\n    // Content with NEGLIGIBLE, LOW, and MEDIUM will be allowed.\n    HarmBlockThreshold[\"BLOCK_ONLY_HIGH\"] = \"BLOCK_ONLY_HIGH\";\n    // All content will be allowed.\n    HarmBlockThreshold[\"BLOCK_NONE\"] = \"BLOCK_NONE\";\n})(HarmBlockThreshold || (HarmBlockThreshold = {}));\n/**\n * Probability that a prompt or candidate matches a harm category.\n * @public\n */\nvar HarmProbability;\n(function (HarmProbability) {\n    // Probability is unspecified.\n    HarmProbability[\"HARM_PROBABILITY_UNSPECIFIED\"] = \"HARM_PROBABILITY_UNSPECIFIED\";\n    // Content has a negligible chance of being unsafe.\n    HarmProbability[\"NEGLIGIBLE\"] = \"NEGLIGIBLE\";\n    // Content has a low chance of being unsafe.\n    HarmProbability[\"LOW\"] = \"LOW\";\n    // Content has a medium chance of being unsafe.\n    HarmProbability[\"MEDIUM\"] = \"MEDIUM\";\n    // Content has a high chance of being unsafe.\n    HarmProbability[\"HIGH\"] = \"HIGH\";\n})(HarmProbability || (HarmProbability = {}));\n/**\n * Reason that a prompt was blocked.\n * @public\n */\nvar BlockReason;\n(function (BlockReason) {\n    // A blocked reason was not specified.\n    BlockReason[\"BLOCKED_REASON_UNSPECIFIED\"] = \"BLOCKED_REASON_UNSPECIFIED\";\n    // Content was blocked by safety settings.\n    BlockReason[\"SAFETY\"] = \"SAFETY\";\n    // Content was blocked, but the reason is uncategorized.\n    BlockReason[\"OTHER\"] = \"OTHER\";\n})(BlockReason || (BlockReason = {}));\n/**\n * Reason that a candidate finished.\n * @public\n */\nvar FinishReason;\n(function (FinishReason) {\n    // Default value. This value is unused.\n    FinishReason[\"FINISH_REASON_UNSPECIFIED\"] = \"FINISH_REASON_UNSPECIFIED\";\n    // Natural stop point of the model or provided stop sequence.\n    FinishReason[\"STOP\"] = \"STOP\";\n    // The maximum number of tokens as specified in the request was reached.\n    FinishReason[\"MAX_TOKENS\"] = \"MAX_TOKENS\";\n    // The candidate content was flagged for safety reasons.\n    FinishReason[\"SAFETY\"] = \"SAFETY\";\n    // The candidate content was flagged for recitation reasons.\n    FinishReason[\"RECITATION\"] = \"RECITATION\";\n    // Unknown reason.\n    FinishReason[\"OTHER\"] = \"OTHER\";\n})(FinishReason || (FinishReason = {}));\n/**\n * Task type for embedding content.\n * @public\n */\nvar TaskType;\n(function (TaskType) {\n    TaskType[\"TASK_TYPE_UNSPECIFIED\"] = \"TASK_TYPE_UNSPECIFIED\";\n    TaskType[\"RETRIEVAL_QUERY\"] = \"RETRIEVAL_QUERY\";\n    TaskType[\"RETRIEVAL_DOCUMENT\"] = \"RETRIEVAL_DOCUMENT\";\n    TaskType[\"SEMANTIC_SIMILARITY\"] = \"SEMANTIC_SIMILARITY\";\n    TaskType[\"CLASSIFICATION\"] = \"CLASSIFICATION\";\n    TaskType[\"CLUSTERING\"] = \"CLUSTERING\";\n})(TaskType || (TaskType = {}));\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass GoogleGenerativeAIError extends Error {\n    constructor(message) {\n        super(`[GoogleGenerativeAI Error]: ${message}`);\n    }\n}\nclass GoogleGenerativeAIResponseError extends GoogleGenerativeAIError {\n    constructor(message, response) {\n        super(message);\n        this.response = response;\n    }\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst BASE_URL = \"https://generativelanguage.googleapis.com\";\nconst API_VERSION = \"v1\";\n/**\n * We can't `require` package.json if this runs on web. We will use rollup to\n * swap in the version number here at build time.\n */\nconst PACKAGE_VERSION = \"0.1.3\";\nconst PACKAGE_LOG_HEADER = \"genai-js\";\nvar Task;\n(function (Task) {\n    Task[\"GENERATE_CONTENT\"] = \"generateContent\";\n    Task[\"STREAM_GENERATE_CONTENT\"] = \"streamGenerateContent\";\n    Task[\"COUNT_TOKENS\"] = \"countTokens\";\n    Task[\"EMBED_CONTENT\"] = \"embedContent\";\n    Task[\"BATCH_EMBED_CONTENTS\"] = \"batchEmbedContents\";\n})(Task || (Task = {}));\nclass RequestUrl {\n    constructor(model, task, apiKey, stream) {\n        this.model = model;\n        this.task = task;\n        this.apiKey = apiKey;\n        this.stream = stream;\n    }\n    toString() {\n        let url = `${BASE_URL}/${API_VERSION}/models/${this.model}:${this.task}`;\n        if (this.stream) {\n            url += \"?alt=sse\";\n        }\n        return url;\n    }\n}\n/**\n * Simple, but may become more complex if we add more versions to log.\n */\nfunction getClientHeaders() {\n    return `${PACKAGE_LOG_HEADER}/${PACKAGE_VERSION}`;\n}\nasync function makeRequest(url, body) {\n    let response;\n    try {\n        response = await fetch(url.toString(), {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"x-goog-api-client\": getClientHeaders(),\n                \"x-goog-api-key\": url.apiKey,\n            },\n            body,\n        });\n        if (!response.ok) {\n            let message = \"\";\n            try {\n                const json = await response.json();\n                message = json.error.message;\n                if (json.error.details) {\n                    message += ` ${JSON.stringify(json.error.details)}`;\n                }\n            }\n            catch (e) {\n                // ignored\n            }\n            throw new Error(`[${response.status} ${response.statusText}] ${message}`);\n        }\n    }\n    catch (e) {\n        const err = new GoogleGenerativeAIError(`Error fetching from ${url.toString()}: ${e.message}`);\n        err.stack = e.stack;\n        throw err;\n    }\n    return response;\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Adds convenience helper methods to a response object, including stream\n * chunks (as long as each chunk is a complete GenerateContentResponse JSON).\n */\nfunction addHelpers(response) {\n    response.text = () => {\n        if (response.candidates && response.candidates.length > 0) {\n            if (response.candidates.length > 1) {\n                console.warn(`This response had ${response.candidates.length} ` +\n                    `candidates. Returning text from the first candidate only. ` +\n                    `Access response.candidates directly to use the other candidates.`);\n            }\n            if (hadBadFinishReason(response.candidates[0])) {\n                throw new GoogleGenerativeAIResponseError(`${formatBlockErrorMessage(response)}`, response);\n            }\n            return getText(response);\n        }\n        else if (response.promptFeedback) {\n            throw new GoogleGenerativeAIResponseError(`Text not available. ${formatBlockErrorMessage(response)}`, response);\n        }\n        return \"\";\n    };\n    return response;\n}\n/**\n * Returns text of first candidate.\n */\nfunction getText(response) {\n    var _a, _b, _c, _d;\n    if ((_d = (_c = (_b = (_a = response.candidates) === null || _a === void 0 ? void 0 : _a[0].content) === null || _b === void 0 ? void 0 : _b.parts) === null || _c === void 0 ? void 0 : _c[0]) === null || _d === void 0 ? void 0 : _d.text) {\n        return response.candidates[0].content.parts[0].text;\n    }\n    else {\n        return \"\";\n    }\n}\nconst badFinishReasons = [FinishReason.RECITATION, FinishReason.SAFETY];\nfunction hadBadFinishReason(candidate) {\n    return (!!candidate.finishReason &&\n        badFinishReasons.includes(candidate.finishReason));\n}\nfunction formatBlockErrorMessage(response) {\n    var _a, _b, _c;\n    let message = \"\";\n    if ((!response.candidates || response.candidates.length === 0) &&\n        response.promptFeedback) {\n        message += \"Response was blocked\";\n        if ((_a = response.promptFeedback) === null || _a === void 0 ? void 0 : _a.blockReason) {\n            message += ` due to ${response.promptFeedback.blockReason}`;\n        }\n        if ((_b = response.promptFeedback) === null || _b === void 0 ? void 0 : _b.blockReasonMessage) {\n            message += `: ${response.promptFeedback.blockReasonMessage}`;\n        }\n    }\n    else if ((_c = response.candidates) === null || _c === void 0 ? void 0 : _c[0]) {\n        const firstCandidate = response.candidates[0];\n        if (hadBadFinishReason(firstCandidate)) {\n            message += `Candidate was blocked due to ${firstCandidate.finishReason}`;\n            if (firstCandidate.finishMessage) {\n                message += `: ${firstCandidate.finishMessage}`;\n            }\n        }\n    }\n    return message;\n}\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst responseLineRE = /^data\\: (.*)(?:\\n\\n|\\r\\r|\\r\\n\\r\\n)/;\n/**\n * Process a response.body stream from the backend and return an\n * iterator that provides one complete GenerateContentResponse at a time\n * and a promise that resolves with a single aggregated\n * GenerateContentResponse.\n *\n * @param response - Response from a fetch call\n */\nfunction processStream(response) {\n    const inputStream = response.body.pipeThrough(new TextDecoderStream(\"utf8\", { fatal: true }));\n    const responseStream = getResponseStream(inputStream);\n    const [stream1, stream2] = responseStream.tee();\n    return {\n        stream: generateResponseSequence(stream1),\n        response: getResponsePromise(stream2),\n    };\n}\nasync function getResponsePromise(stream) {\n    const allResponses = [];\n    const reader = stream.getReader();\n    while (true) {\n        const { done, value } = await reader.read();\n        if (done) {\n            return addHelpers(aggregateResponses(allResponses));\n        }\n        allResponses.push(value);\n    }\n}\nfunction generateResponseSequence(stream) {\n    return __asyncGenerator(this, arguments, function* generateResponseSequence_1() {\n        const reader = stream.getReader();\n        while (true) {\n            const { value, done } = yield __await(reader.read());\n            if (done) {\n                break;\n            }\n            yield yield __await(addHelpers(value));\n        }\n    });\n}\n/**\n * Reads a raw stream from the fetch response and join incomplete\n * chunks, returning a new stream that provides a single complete\n * GenerateContentResponse in each iteration.\n */\nfunction getResponseStream(inputStream) {\n    const reader = inputStream.getReader();\n    const stream = new ReadableStream({\n        start(controller) {\n            let currentText = \"\";\n            return pump();\n            function pump() {\n                return reader.read().then(({ value, done }) => {\n                    if (done) {\n                        if (currentText.trim()) {\n                            controller.error(new GoogleGenerativeAIError(\"Failed to parse stream\"));\n                            return;\n                        }\n                        controller.close();\n                        return;\n                    }\n                    currentText += value;\n                    let match = currentText.match(responseLineRE);\n                    let parsedResponse;\n                    while (match) {\n                        try {\n                            parsedResponse = JSON.parse(match[1]);\n                        }\n                        catch (e) {\n                            controller.error(new GoogleGenerativeAIError(`Error parsing JSON response: \"${match[1]}\"`));\n                            return;\n                        }\n                        controller.enqueue(parsedResponse);\n                        currentText = currentText.substring(match[0].length);\n                        match = currentText.match(responseLineRE);\n                    }\n                    return pump();\n                });\n            }\n        },\n    });\n    return stream;\n}\n/**\n * Aggregates an array of `GenerateContentResponse`s into a single\n * GenerateContentResponse.\n */\nfunction aggregateResponses(responses) {\n    const lastResponse = responses[responses.length - 1];\n    const aggregatedResponse = {\n        promptFeedback: lastResponse === null || lastResponse === void 0 ? void 0 : lastResponse.promptFeedback,\n    };\n    for (const response of responses) {\n        if (response.candidates) {\n            for (const candidate of response.candidates) {\n                const i = candidate.index;\n                if (!aggregatedResponse.candidates) {\n                    aggregatedResponse.candidates = [];\n                }\n                if (!aggregatedResponse.candidates[i]) {\n                    aggregatedResponse.candidates[i] = {\n                        index: candidate.index,\n                    };\n                }\n                // Keep overwriting, the last one will be final\n                aggregatedResponse.candidates[i].citationMetadata =\n                    candidate.citationMetadata;\n                aggregatedResponse.candidates[i].finishReason = candidate.finishReason;\n                aggregatedResponse.candidates[i].finishMessage =\n                    candidate.finishMessage;\n                aggregatedResponse.candidates[i].safetyRatings =\n                    candidate.safetyRatings;\n                /**\n                 * Candidates should always have content and parts, but this handles\n                 * possible malformed responses.\n                 */\n                if (candidate.content && candidate.content.parts) {\n                    if (!aggregatedResponse.candidates[i].content) {\n                        aggregatedResponse.candidates[i].content = {\n                            role: candidate.content.role || \"user\",\n                            parts: [{ text: \"\" }],\n                        };\n                    }\n                    for (const part of candidate.content.parts) {\n                        if (part.text) {\n                            aggregatedResponse.candidates[i].content.parts[0].text +=\n                                part.text;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return aggregatedResponse;\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function generateContentStream(apiKey, model, params) {\n    const url = new RequestUrl(model, Task.STREAM_GENERATE_CONTENT, apiKey, \n    /* stream */ true);\n    const response = await makeRequest(url, JSON.stringify(params));\n    return processStream(response);\n}\nasync function generateContent(apiKey, model, params) {\n    const url = new RequestUrl(model, Task.GENERATE_CONTENT, apiKey, \n    /* stream */ false);\n    const response = await makeRequest(url, JSON.stringify(params));\n    const responseJson = await response.json();\n    const enhancedResponse = addHelpers(responseJson);\n    return {\n        response: enhancedResponse,\n    };\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction formatNewContent(request, role) {\n    let newParts = [];\n    if (typeof request === \"string\") {\n        newParts = [{ text: request }];\n    }\n    else {\n        for (const partOrString of request) {\n            if (typeof partOrString === \"string\") {\n                newParts.push({ text: partOrString });\n            }\n            else {\n                newParts.push(partOrString);\n            }\n        }\n    }\n    return { role, parts: newParts };\n}\nfunction formatGenerateContentInput(params) {\n    if (params.contents) {\n        return params;\n    }\n    else {\n        const content = formatNewContent(params, \"user\");\n        return { contents: [content] };\n    }\n}\nfunction formatEmbedContentInput(params) {\n    if (typeof params === \"string\" || Array.isArray(params)) {\n        const content = formatNewContent(params, \"user\");\n        return { content };\n    }\n    return params;\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Do not log a message for this error.\n */\nconst SILENT_ERROR = \"SILENT_ERROR\";\n/**\n * ChatSession class that enables sending chat messages and stores\n * history of sent and received messages so far.\n *\n * @public\n */\nclass ChatSession {\n    constructor(apiKey, model, params) {\n        this.model = model;\n        this.params = params;\n        this._history = [];\n        this._sendPromise = Promise.resolve();\n        this._apiKey = apiKey;\n        if (params === null || params === void 0 ? void 0 : params.history) {\n            this._history = params.history.map((content) => {\n                if (!content.role) {\n                    throw new Error(\"Missing role for history item: \" + JSON.stringify(content));\n                }\n                return formatNewContent(content.parts, content.role);\n            });\n        }\n    }\n    /**\n     * Gets the chat history so far. Blocked prompts are not added to history.\n     * Blocked candidates are not added to history, nor are the prompts that\n     * generated them.\n     */\n    async getHistory() {\n        await this._sendPromise;\n        return this._history;\n    }\n    /**\n     * Sends a chat message and receives a non-streaming\n     * {@link GenerateContentResult}\n     */\n    async sendMessage(request) {\n        var _a, _b;\n        await this._sendPromise;\n        const newContent = formatNewContent(request, \"user\");\n        const generateContentRequest = {\n            safetySettings: (_a = this.params) === null || _a === void 0 ? void 0 : _a.safetySettings,\n            generationConfig: (_b = this.params) === null || _b === void 0 ? void 0 : _b.generationConfig,\n            contents: [...this._history, newContent],\n        };\n        let finalResult;\n        // Add onto the chain.\n        this._sendPromise = this._sendPromise\n            .then(() => generateContent(this._apiKey, this.model, generateContentRequest))\n            .then((result) => {\n            var _a;\n            if (result.response.candidates &&\n                result.response.candidates.length > 0) {\n                this._history.push(newContent);\n                const responseContent = Object.assign({ parts: [], \n                    // Response seems to come back without a role set.\n                    role: \"model\" }, (_a = result.response.candidates) === null || _a === void 0 ? void 0 : _a[0].content);\n                this._history.push(responseContent);\n            }\n            else {\n                const blockErrorMessage = formatBlockErrorMessage(result.response);\n                if (blockErrorMessage) {\n                    console.warn(`sendMessage() was unsuccessful. ${blockErrorMessage}. Inspect response object for details.`);\n                }\n            }\n            finalResult = result;\n        });\n        await this._sendPromise;\n        return finalResult;\n    }\n    /**\n     * Sends a chat message and receives the response as a\n     * {@link GenerateContentStreamResult} containing an iterable stream\n     * and a response promise.\n     */\n    async sendMessageStream(request) {\n        var _a, _b;\n        await this._sendPromise;\n        const newContent = formatNewContent(request, \"user\");\n        const generateContentRequest = {\n            safetySettings: (_a = this.params) === null || _a === void 0 ? void 0 : _a.safetySettings,\n            generationConfig: (_b = this.params) === null || _b === void 0 ? void 0 : _b.generationConfig,\n            contents: [...this._history, newContent],\n        };\n        const streamPromise = generateContentStream(this._apiKey, this.model, generateContentRequest);\n        // Add onto the chain.\n        this._sendPromise = this._sendPromise\n            .then(() => streamPromise)\n            // This must be handled to avoid unhandled rejection, but jump\n            // to the final catch block with a label to not log this error.\n            .catch((_ignored) => {\n            throw new Error(SILENT_ERROR);\n        })\n            .then((streamResult) => streamResult.response)\n            .then((response) => {\n            if (response.candidates && response.candidates.length > 0) {\n                this._history.push(newContent);\n                const responseContent = Object.assign({}, response.candidates[0].content);\n                // Response seems to come back without a role set.\n                if (!responseContent.role) {\n                    responseContent.role = \"model\";\n                }\n                this._history.push(responseContent);\n            }\n            else {\n                const blockErrorMessage = formatBlockErrorMessage(response);\n                if (blockErrorMessage) {\n                    console.warn(`sendMessageStream() was unsuccessful. ${blockErrorMessage}. Inspect response object for details.`);\n                }\n            }\n        })\n            .catch((e) => {\n            // Errors in streamPromise are already catchable by the user as\n            // streamPromise is returned.\n            // Avoid duplicating the error message in logs.\n            if (e.message !== SILENT_ERROR) {\n                // Users do not have access to _sendPromise to catch errors\n                // downstream from streamPromise, so they should not throw.\n                console.error(e);\n            }\n        });\n        return streamPromise;\n    }\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function countTokens(apiKey, model, params) {\n    const url = new RequestUrl(model, Task.COUNT_TOKENS, apiKey, false);\n    const response = await makeRequest(url, JSON.stringify(Object.assign(Object.assign({}, params), { model })));\n    return response.json();\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function embedContent(apiKey, model, params) {\n    const url = new RequestUrl(model, Task.EMBED_CONTENT, apiKey, false);\n    const response = await makeRequest(url, JSON.stringify(params));\n    return response.json();\n}\nasync function batchEmbedContents(apiKey, model, params) {\n    const url = new RequestUrl(model, Task.BATCH_EMBED_CONTENTS, apiKey, false);\n    const requestsWithModel = params.requests.map((request) => {\n        return Object.assign(Object.assign({}, request), { model: `models/${model}` });\n    });\n    const response = await makeRequest(url, JSON.stringify({ requests: requestsWithModel }));\n    return response.json();\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Class for generative model APIs.\n * @public\n */\nclass GenerativeModel {\n    constructor(apiKey, modelParams) {\n        var _a;\n        this.apiKey = apiKey;\n        if (modelParams.model.startsWith(\"models/\")) {\n            this.model = (_a = modelParams.model.split(\"models/\")) === null || _a === void 0 ? void 0 : _a[1];\n        }\n        else {\n            this.model = modelParams.model;\n        }\n        this.generationConfig = modelParams.generationConfig || {};\n        this.safetySettings = modelParams.safetySettings || [];\n    }\n    /**\n     * Makes a single non-streaming call to the model\n     * and returns an object containing a single {@link GenerateContentResponse}.\n     */\n    async generateContent(request) {\n        const formattedParams = formatGenerateContentInput(request);\n        return generateContent(this.apiKey, this.model, Object.assign({ generationConfig: this.generationConfig, safetySettings: this.safetySettings }, formattedParams));\n    }\n    /**\n     * Makes a single streaming call to the model\n     * and returns an object containing an iterable stream that iterates\n     * over all chunks in the streaming response as well as\n     * a promise that returns the final aggregated response.\n     */\n    async generateContentStream(request) {\n        const formattedParams = formatGenerateContentInput(request);\n        return generateContentStream(this.apiKey, this.model, Object.assign({ generationConfig: this.generationConfig, safetySettings: this.safetySettings }, formattedParams));\n    }\n    /**\n     * Gets a new {@link ChatSession} instance which can be used for\n     * multi-turn chats.\n     */\n    startChat(startChatParams) {\n        return new ChatSession(this.apiKey, this.model, startChatParams);\n    }\n    /**\n     * Counts the tokens in the provided request.\n     */\n    async countTokens(request) {\n        const formattedParams = formatGenerateContentInput(request);\n        return countTokens(this.apiKey, this.model, formattedParams);\n    }\n    /**\n     * Embeds the provided content.\n     */\n    async embedContent(request) {\n        const formattedParams = formatEmbedContentInput(request);\n        return embedContent(this.apiKey, this.model, formattedParams);\n    }\n    /**\n     * Embeds an array of {@link EmbedContentRequest}s.\n     */\n    async batchEmbedContents(batchEmbedContentRequest) {\n        return batchEmbedContents(this.apiKey, this.model, batchEmbedContentRequest);\n    }\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Top-level class for this SDK\n * @public\n */\nclass GoogleGenerativeAI {\n    constructor(apiKey) {\n        this.apiKey = apiKey;\n    }\n    /**\n     * Gets a {@link GenerativeModel} instance for the provided model name.\n     */\n    getGenerativeModel(modelParams) {\n        if (!modelParams.model) {\n            throw new GoogleGenerativeAIError(`Must provide a model name. ` +\n                `Example: genai.getGenerativeModel({ model: 'my-model-name' })`);\n        }\n        return new GenerativeModel(this.apiKey, modelParams);\n    }\n}\n\nexport { BlockReason, ChatSession, FinishReason, GenerativeModel, GoogleGenerativeAI, HarmBlockThreshold, HarmCategory, HarmProbability, TaskType };\n//# sourceMappingURL=index.mjs.map\n","import { GoogleGenerativeAI } from \"@google/generative-ai\";\nimport { ChatbotType } from \"./types\";\n\nexport async function initChatbot(chatbotType: ChatbotType, apiKey: string) {\n  let chat;\n  if (chatbotType === \"gemini\") {\n    const genAI = new GoogleGenerativeAI(apiKey);\n    const model = genAI.getGenerativeModel({ model: \"gemini-pro\" });\n\n    chat = model.startChat({\n      history: [\n        {\n          role: \"user\",\n          parts: \"Hello, nice to meet you. Who are you?\",\n        },\n        {\n          role: \"model\",\n          parts:\n            \"Great to meet you. I am a nice bot named EasyChatbot that loves to chat and help you.\",\n        },\n      ],\n    });\n  } else {\n    chat = {\n      sendMessage: async (message: string) => {\n        return {\n          response: {\n            text: () => `You said: ${message}`,\n          },\n        };\n      },\n    };\n  }\n  return chat;\n}","import React, { useState, useEffect, useRef } from \"react\";\nimport { ChatbotProps, Message } from \"./types\";\nimport { initChatbot } from \"./utils\";\nimport \"./chatbot.css\";\n\nfunction Chatbot(props: ChatbotProps) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState<Message[]>([\n    {\n      text: \"Hello, nice to meet you. I am EasyChatbot. You can talk with me freely.\",\n      sender: \"bot\",\n    },\n  ]);\n  const [input, setInput] = useState(\"\");\n  const lastMessageRef = useRef<HTMLDivElement | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [chatModel, setChatModel] = useState<any>(null);\n\n  // Handles sending a message in the chatbot.\n  const handleSend = async () => {\n    if (input) {\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { text: input, sender: \"user\" },\n      ]);\n      setInput(\"\");\n      setIsLoading(true);\n      try {\n        const result = await chatModel.sendMessage(input);\n        const response = await result.response;\n        const text = response.text();\n        setMessages((prevMessages) => [\n          ...prevMessages,\n          { text, sender: \"bot\" },\n        ]);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  };\n\n  const toggleChat = () => {\n    setIsOpen(!isOpen);\n  };\n\n  //Scrolls the last message into view with smooth behavior.\n  useEffect(() => {\n    if (lastMessageRef.current) {\n      lastMessageRef.current.scrollIntoView({ behavior: \"smooth\" });\n    }\n  }, [messages]);\n\n  // Initializes the chatbot.\n  useEffect(() => {\n    async function setupChatbot() {\n      const chat = await initChatbot(props.chatbotType, props.apiKey);\n      setChatModel(chat);\n    }\n    setupChatbot();\n  }, [props.chatbotType, props.apiKey]);\n\n  return (\n    <div className=\"chatbot-container\">\n      {!isOpen && (\n        <div className=\"start-img-container\" onClick={toggleChat}>\n          <img\n            src=\"https://cdn.chatbot.com/widget/61f28451fdd7c5000728b4f9/DSjjJVtWgP_jxGWP.png\"\n            alt=\"Chat Icon\"\n          />\n        </div>\n      )}\n      {isOpen && (\n        <div className=\"chatbot-viewer\">\n          <p className=\"chatbot-header\">\n            Conversation with EasyChatbot{\" \"}\n            <span className=\"close-icon\" onClick={toggleChat}>\n              &times;\n            </span>\n          </p>\n          <div className=\"message-list\">\n            {messages.map((message, index) => (\n              <div\n                className=\"message-item\"\n                key={index}\n                ref={index === messages.length - 1 ? lastMessageRef : null}\n              >\n                <strong>\n                  {message.sender === \"bot\" ? \"EasyChatbot\" : \"You\"}:\n                </strong>\n                <br />\n                <p>{message.text}</p>\n              </div>\n            ))}\n            {isLoading && (\n              <div className=\"loading\">\n                <div className=\"loading-dot\"></div>\n                <div className=\"loading-dot\"></div>\n                <div className=\"loading-dot\"></div>\n              </div>\n            )}{\" \"}\n          </div>\n          <div className=\"chat-input-container\">\n            <input\n              placeholder=\"Message EasyChatbot...\"\n              value={input}\n              onKeyPress={(e) => {\n                if (e.key === \"Enter\") {\n                  handleSend();\n                }\n              }}\n              onChange={(e) => setInput(e.target.value)}\n            />\n            <button onClick={handleSend}>Send</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Chatbot;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Chatbot from './Chatbot';\nimport { ChatbotProps } from './types';\n\nconst MyChatbot: React.FC<ChatbotProps> = (props) => {\n  return <Chatbot {...props} />;\n}\n\nconst init = (element: Element, props: ChatbotProps) => {\n  ReactDOM.render(<Chatbot {...props} />, element);\n}\n\nexport { MyChatbot as Chatbot, init };"],"names":["define_process_env_default","f","require$$0","k","l","m","n","p","q","c","a","g","d","e","h","reactJsxRuntime_production_min","HarmCategory","HarmBlockThreshold","HarmProbability","BlockReason","FinishReason","TaskType","GoogleGenerativeAIError","message","GoogleGenerativeAIResponseError","response","BASE_URL","API_VERSION","PACKAGE_VERSION","PACKAGE_LOG_HEADER","Task","RequestUrl","model","task","apiKey","stream","url","getClientHeaders","makeRequest","body","json","err","addHelpers","hadBadFinishReason","formatBlockErrorMessage","getText","_a","_b","_c","_d","badFinishReasons","candidate","firstCandidate","__await","v","__asyncGenerator","thisArg","_arguments","generator","i","verb","b","resume","step","settle","r","fulfill","reject","value","responseLineRE","processStream","inputStream","responseStream","getResponseStream","stream1","stream2","generateResponseSequence","getResponsePromise","allResponses","reader","done","aggregateResponses","controller","currentText","pump","match","parsedResponse","responses","lastResponse","aggregatedResponse","part","generateContentStream","params","generateContent","responseJson","formatNewContent","request","role","newParts","partOrString","formatGenerateContentInput","formatEmbedContentInput","SILENT_ERROR","ChatSession","content","newContent","generateContentRequest","finalResult","result","responseContent","blockErrorMessage","streamPromise","_ignored","streamResult","countTokens","embedContent","batchEmbedContents","requestsWithModel","GenerativeModel","modelParams","formattedParams","startChatParams","batchEmbedContentRequest","GoogleGenerativeAI","initChatbot","chatbotType","chat","Chatbot","props","isOpen","setIsOpen","useState","messages","setMessages","input","setInput","lastMessageRef","useRef","isLoading","setIsLoading","chatModel","setChatModel","handleSend","prevMessages","text","error","toggleChat","useEffect","setupChatbot","jsxs","jsx","index","MyChatbot","init","element","ReactDOM"],"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","x_google_ignoreList":[0,1,2,3]}